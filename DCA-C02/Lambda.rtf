{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red93\green93\blue93;\red246\green246\blue246;}
{\*\expandedcolortbl;;\cssrgb\c43922\c43922\c43922;\cssrgb\c97255\c97255\c97255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\fs28 \cf2 \cb3 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Producers are users who create the events. Events contain all the necessary information required for the consumers to take action on the event.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The router ingests, filters, and pushes the events to the appropriate consumers. It does this by using a set of rules or another service, such as Amazon Simple Notification Service (Amazon SNS), to send the messages.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Consumers subscribe to be notified about the events, or they can monitor an event stream and act on events that pertain only to them.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 A resource policy determines who is allowed in (who can initiate your function, such as Amazon S3), and it can be used to grant access across accounts.\'a0\
An execution role must be created or selected when creating your function, and it controls what Lambda is allowed to do (such as writing to a DynamoDB table). It includes a trust policy with AssumeRole.\'a0\
\
Event sources can invoke a Lambda function in three general design patterns. These patterns are called invocation models: synchronous, asynchronous, and polling.\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 The IAM execution role grant your function permissions to interact with other services. You specify this execution role when you create a function. AWS Lambda assumes the execution role when your function is invoked. The policy for this execution role defines the actions the execution role is allowed to take\'97for example, writing to a DynamoDB table.\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 Reasons for setting a concurrency reserve for a function can include the following:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Managing cost\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Matching speed with a downstream resource\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Regulating how long it takes to process events\'a0\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 You might try to limit the number of concurrent runs. You might also want to make sure that your function can scale up to a reserved level regardless of other functions that are running.\
\
Features of Lambda Function:\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 You can write code for Lambda in a programming language that you already know. Development in Lambda is not tightly coupled to AWS so you can easily port code in and out of AWS. Instead of scaling by adding servers, Lambda scales in response to events. You configure memory settings, and AWS handles details such as CPU, network, and I/O throughput.\'a0\
\
You can use AWS X-Ray to visualize the components of your application, identify performance bottlenecks, and troubleshoot requests that resulted in an error. Your Lambda functions send trace data to X-Ray, and X-Ray processes the data to generate a service map and searchable trace summaries. AWS X-Ray records how the Lambda functions are running. Use it to identify the call flow of your Lambda function and the performance of every API call within your application.\
\
You can use versions to manage the deployment of your functions. For example, you can publish a new version of a function for beta testing without affecting users of the stable production version. AWS Lambda creates a new version of your function each time that you publish the function. The new version is a copy of the unpublished version of the function.\
\
A resource policy (also called a function policy) is used to tell the Lambda service which principals have permission to invoke the Lambda function.\
\
\
}